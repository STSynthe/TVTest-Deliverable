# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  workflow_dispatch:

env:
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release_MD

  GIT_TVTEST: TVTest
  GIT_TVTEST_REF: develop
  GIT_TVTEST_PLATFORM: \'Win32\'\, \'x64\'

  # https://github.com/mstorsjo/fdk-aac
  GIT_FDK_AAC_REF: v2.0.3

permissions:
  contents: read

defaults:
  run:
    #working-directory: ${{env.RUNNER_WORKSPACE}}\${{env.GIT_TVTEST}}
    shell: pwsh

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 20

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: DBCTRADO/${{env.GIT_TVTEST}}
        ref: ${{env.GIT_TVTEST_REF}}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: 17
        msbuild-architecture: x64

    - name: Set
      run: |
        $Env:GIT_TVTEST_SHA = git show --format=%H --no-patch
        Write-Host "GIT_TVTEST_SHA = ${Env:GIT_TVTEST_SHA}"

    - name: Sets
      shell: cmd
      run: |
        set
        dir

    - name: Pre-Build
      run: |
        git submodule set-branch --branch develop src/LibISDB
        git submodule update --init --depth 1 src/LibISDB
        Set-Location src\LibISDB
        git submodule update --init Thirdparty/fdk-aac
        Set-Location Thirdparty\fdk-aac
        git checkout $Env:GIT_FDK_AAC_REF
        Set-Location ..\..\..\..\
        foreach ($platform in ('x86', 'x64')) {msbuild -maxCpuCount -target:Build -property:Configuration=$Env:BUILD_CONFIGURATION -property:Platform=$platform src\LibISDB\Projects\LibISDB.sln}

    - name: Build
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        foreach　($platform in (${{env.GIT_TVTEST_PLATFORM}})) {msbuild -maxCpuCount -target:Build -property:Configuration=$Env:BUILD_CONFIGURATION -property:Platform=$platform src\TVTest.sln}

    # package.sh
    - name: Package
      run: |
        New-Item "${Env:GITHUB_WORKSPACE}\package" -ItemType Directory
        foreach　($platform in (${{env.GIT_TVTEST_PLATFORM}})) {
          $current = "${Env:GITHUB_WORKSPACE}\package\${Env:GIT_TVTEST}-${platform}"
          $target_directory = "src\${platform}\${Env:BUILD_CONFIGURATION}"
          New-Item "$current" -ItemType Directory
          Copy-Item "${target_directory}\TVTest.exe", "${target_directory}\TVTest_Image.dll", "${target_directory}\TVTest.chm" -Destination "$current"
        }

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.TVTest}}
        path: package\*
