# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  workflow_dispatch:

env:
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release_MD
  BUILD_PLUGIN_CONFIGURATION: Release

  GIT_TVTEST_NAME: TVTest
  GIT_TVTEST_REF: develop

  # https://github.com/mstorsjo/fdk-aac
  GIT_FDK_AAC_REF: v2.0.3

permissions:
  contents: read

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 20

    strategy:
      matrix:
        platform: [x86, x64]

    env:
      GIT_TVTEST_PLATFORM: ${{ matrix.platform == 'x86' && 'Win32' || matrix.platform }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: DBCTRADO/${{env.GIT_TVTEST_NAME}}
        ref: ${{env.GIT_TVTEST_REF}}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: 17
        msbuild-architecture: x64

    - name: Add Variable
      id: variables
      run: |
        Add-Content -Path $Env:GITHUB_OUTPUT -Value "GIT_TVTEST_SHA=$(git log -1 --format=%H)"
        Add-Content -Path $Env:GITHUB_OUTPUT -Value "GIT_TVTEST_VERSION=$((Select-String -Path src\TVTestVersion.h -Raw -Pattern "#define VERSION_TEXT_A") -replace '[^"]+"([0-9\.]+)"', '$1')"

    - name: Pre-Build
      run: |
        git submodule set-branch --branch develop src/LibISDB
        git submodule update --init --depth 1 src/LibISDB
        Set-Location src\LibISDB
        git submodule update --init Thirdparty/fdk-aac
        Set-Location Thirdparty\fdk-aac
        git checkout ${{env.GIT_FDK_AAC_REF}}
        Set-Location ..\..\..\..\
        msbuild -maxCpuCount -target:Build -property:Configuration=${{env.BUILD_CONFIGURATION}} -property:Platform=${{matrix.platform}} src\LibISDB\Projects\LibISDB.sln

    - name: Build
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild -maxCpuCount -target:Build -property:Configuration=${{env.BUILD_CONFIGURATION}} -property:Platform=${{env.GIT_TVTEST_PLATFORM}} src\TVTest.sln
        msbuild -maxCpuCount -target:Build -property:Configuration=${{env.BUILD_PLUGIN_CONFIGURATION}} -property:Platform=${{env.GIT_TVTEST_PLATFORM}} sdk\Samples\Samples.sln

    # package.sh
    - name: Package
      run: |
        $DirPackageRoot = "$Env:GITHUB_WORKSPACE\package"

        New-Item "$DirPackageRoot" -ItemType Directory

        $TypePlatform = "${{env.GIT_TVTEST_PLATFORM}}"

        $DirPlatform = "$DirPackageRoot\$Env:GIT_TVTEST_NAME-$TypePlatform"
        $DirTarget = "$Env:GITHUB_WORKSPACE\src\$TypePlatform\$Env:BUILD_CONFIGURATION"

        New-Item "$DirPlatform" -ItemType Directory
        New-Item "$DirPlatform\Plugins" -ItemType Directory
        New-Item "$DirPlatform\Themes" -ItemType Directory

        Copy-Item "$DirTarget\TVTest.exe", "$DirTarget\TVTest_Image.dll", "$DirTarget\TVTest.chm" -Destination "$DirPlatform" -PassThru
        Copy-Item "doc" -Destination "$DirPlatform" -Recurse -PassThru
        Copy-Item "data\*.ini" -Destination "$DirPlatform" -PassThru
        Copy-Item "data\Themes\*.httheme" -Destination "$DirPlatform\Themes" -PassThru
        if ("x64" -ceq $TypePlatform) {Copy-Item "data\Data_x64\TVTest_Logo.bmp" -Destination "$DirPlatform" -PassThru} else {Copy-Item "data\TVTest_Logo.bmp" -Destination "$DirPlatform" -PassThru}

        $DirTargetPlugins = "$Env:GITHUB_WORKSPACE\sdk\Samples\$TypePlatform\$Env:BUILD_PLUGIN_CONFIGURATION"
        Copy-Item "$DirTargetPlugins\*.tvtp", "$DirTargetPlugins\*.dll" -Destination "$DirPlatform\Plugins" -PassThru

    - name: Upload
      uses: actions/upload-artifact@v4
      env:
        ARTIFACT_NAME: "${{env.GIT_TVTEST_NAME}}_v${{steps.variables.outputs.GIT_TVTEST_VERSION}}-${{matrix.platform}}+${{steps.variables.outputs.GIT_TVTEST_SHA}}"
      with:
        name: ${{env.ARTIFACT_NAME}}
        compression-level: 7
        path: package\*
