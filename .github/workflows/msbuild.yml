# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild for TvTest(latest)

on:
  workflow_dispatch:

env:
  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release_MD
  BUILD_PLUGIN_CONFIGURATION: Release

  TVTEST_NAME: TVTest
  TVTEST_REF: develop

  # https://github.com/mstorsjo/fdk-aac
  FDKAAC_REF: v2.0.3

permissions:
  contents: write

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 15

    strategy:
      matrix:
        platform: [x86, x64]

    env:
      TVTEST_PLATFORM: ${{ matrix.platform == 'x86' && 'Win32' || matrix.platform }}
      WINDOWS_TARGET_PLATFORM_VERSION: "10.0" # Windows 11 SDK Latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: DBCTRADO/TVTest
        ref: ${{env.TVTEST_REF}}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: 17
        msbuild-architecture: x64

    - name: Add Variable
      id: variables
      run: |
        Add-Content -Path "$Env:GITHUB_OUTPUT" -Value "TVTEST_SHA=$(git log -1 --format=%H)"
        Add-Content -Path "$Env:GITHUB_OUTPUT" -Value "TVTEST_VERSION=$((Select-String -Path src\TVTestVersion.h -Raw -Pattern "#define VERSION_TEXT_A") -replace '[^"]+"([0-9\.]+)"', '$1')"

    - name: Build LibISDB
      run: |
        git submodule set-branch --branch develop src/LibISDB
        git submodule update --init --depth 1 src/LibISDB
        Set-Location src\LibISDB
        git submodule update --init Thirdparty/fdk-aac
        Set-Location Thirdparty\fdk-aac
        git checkout ${{env.FDKAAC_REF}}
        Set-Location ..\..\..\..\
        msbuild -maxCpuCount -target:Build -property:Configuration=${{env.BUILD_CONFIGURATION}} -property:Platform=${{matrix.platform}} -property:WindowsTargetPlatformVersion=${{env.WINDOWS_TARGET_PLATFORM_VERSION}} src\LibISDB\Projects\LibISDB.sln

    - name: Build
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild -maxCpuCount -target:Build -property:Configuration=${{env.BUILD_CONFIGURATION}} -property:Platform=${{env.TVTEST_PLATFORM}} -property:WindowsTargetPlatformVersion=${{env.WINDOWS_TARGET_PLATFORM_VERSION}} src\TVTest.sln

    - name: Build Plugin
      run: msbuild -maxCpuCount -target:Build -property:Configuration=${{env.BUILD_PLUGIN_CONFIGURATION}} -property:Platform=${{env.TVTEST_PLATFORM}} -property:WindowsTargetPlatformVersion=${{env.WINDOWS_TARGET_PLATFORM_VERSION}} sdk\Samples\Samples.sln

    # package.sh
    - name: Package
      id: package
      run: |
        $PackageRoot = "${{github.workspace}}\package"

        New-Item "$PackageRoot" -ItemType Directory

        $TypePlatform = "${{env.TVTEST_PLATFORM}}"

        $PackagePlatform = "$PackageRoot\${{env.TVTEST_NAME}}-$TypePlatform"
        $Target = "src\$TypePlatform\${{env.BUILD_CONFIGURATION}}"

        New-Item "$PackagePlatform" -ItemType Directory
        New-Item "$PackagePlatform\Plugins" -ItemType Directory
        New-Item "$PackagePlatform\Themes" -ItemType Directory

        Copy-Item "$Target\TVTest.exe", "$Target\TVTest_Image.dll", "$Target\TVTest.chm" -Destination "$PackagePlatform" -PassThru
        Copy-Item "doc" -Destination "$PackagePlatform" -Recurse -PassThru
        Copy-Item "data\*.ini" -Destination "$PackagePlatform" -PassThru
        Copy-Item "data\Themes\*.httheme" -Destination "$PackagePlatform\Themes" -PassThru
        $LogoPath = "data"
        if ("x64" -ceq $TypePlatform) {$LogoPath = "data\Data_x64"}
        Copy-Item "$LogoPath\TVTest_Logo.bmp" -Destination "$PackagePlatform" -PassThru

        $TargetPlugins = "sdk\Samples\$TypePlatform\${{env.BUILD_PLUGIN_CONFIGURATION}}"
        Copy-Item "$TargetPlugins\*.tvtp", "$TargetPlugins\*.dll" -Destination "$PackagePlatform\Plugins" -PassThru

        Add-Content -Path "$Env:GITHUB_OUTPUT" -Value "TVTEST_EXE=$((Get-FileHash -Algorithm MD5 "$PackagePlatform\TVTest.exe").Hash)"
        Add-Content -Path "$Env:GITHUB_OUTPUT" -Value "TVTEST_IMAGE_DLL=$((Get-FileHash -Algorithm MD5 "$PackagePlatform\TVTest_Image.dll").Hash)"

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.TVTEST_NAME}}_v${{steps.variables.outputs.TVTEST_VERSION}}-${{matrix.platform}}+${{steps.variables.outputs.TVTEST_SHA}}"
        compression-level: 7
        path: package\*

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        name: "${{env.TVTEST_NAME}}_v${{steps.variables.outputs.TVTEST_VERSION}}-${{matrix.platform}}+DBCTRADO/TVTest@${{steps.variables.outputs.TVTEST_SHA}}"
        tag_name: "v${{steps.variables.outputs.TVTEST_VERSION}}"
        body: |
          開発途中のビルド済み**TVTest v${{steps.variables.outputs.TVTEST_VERSION}}** + DBCTRADO/TVTest@${{steps.variables.outputs.TVTEST_SHA}} 版です。
          開発途中の版は安定して動作しない場合があります。理解した上でご使用下さい。また旧版の利用も検討して下さい。

          ```
          # 主要ファイルのハッシュ値です。改竄チェックに役立ちます。
          ${{steps.package.outputs.TVTEST_EXE}}  TVTest.exe
          ${{steps.package.outputs.TVTEST_IMAGE_DLL}}  TVTest_Image.dll
          ```
        draft: true
        files: package\*
